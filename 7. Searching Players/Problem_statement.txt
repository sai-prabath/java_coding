7. Searching Players - lowesr runs and match type methods:

Create a class Player with below attributes

playerId - int
playerName - String
runs - int
playerType - String
MatchType - string

above attributes should be private, write getters, setters and parameterized constructor as required. 

Create class Solution with main method.

Implement two static methods in Solution class.
1. findPlayerWithLowestRuns
2. findPlayerByMatchType 

findPlayerWithLowestRuns method:
- This method will take array of Player objects and a String Value as input parameters.
- The method will return the least runs of the Player from an array of player objects for the given type ( string parameter passed). 
- If no Player with the above condition are present in array of Player objects then the method should return 0.

findPlayerByMatchType method:
- This method will take array of Player objects and String value as input parameters.
- This will return the array of Player objects belonging to the match type passed as input parameter in descending order of playerid.
- If no Player with the above condition are present in the array of player objects, then the method should return null

Note: 
- No two Players will have the same playerld and runs.
- All the searches should be case insensitive.
- The above mentioned static methods should be called from the main method.

For findPlayerWithLowestRuns method:
- The main method should print the returned runs as it is if the returned value is greater than 0 
- If its zero it should print "No such player".

Eg: 
25
where 25 is lowest runs of the Player.
 
For findPlayerByMatchType method:
- The main method should print the playerld from the returned Player array for each Player if the returned value is not null.
- If the returned value is null then it should print "No Player with given matchType".

Eg:
13
11
Where 13 and 11 are the player ids

Before calling these static methods in main, use scanner object to read the values of four Players objects.
These objects referring attributes in the above mentioned attribute sequence. 
Next, read the value of two String parameter for capturing player type and match Type.,

Sample Input:

1
John Doe
100
Batsman
ODI
2
Jane Doe
50
Bowler
T20
3
Alex Roe
200
Batsman
ODI
4
Chris Moe
30
Bowler
Test
Batsman
ODI

Output:

100
3
1

Explaination:

- The `findPlayerWithLowestRuns` method returns the lowest runs for players of type "Batsman", which is 100.
- The `findPlayerByMatchType` method returns players who played "ODI" matches, ordered by descending `playerId` which results in player ids 3 and 1.
